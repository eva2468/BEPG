// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/eva2468/bepg/pkg/models (interfaces: ModelInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockModelInterface is a mock of ModelInterface interface.
type MockModelInterface struct {
	ctrl     *gomock.Controller
	recorder *MockModelInterfaceMockRecorder
}

// MockModelInterfaceMockRecorder is the mock recorder for MockModelInterface.
type MockModelInterfaceMockRecorder struct {
	mock *MockModelInterface
}

// NewMockModelInterface creates a new mock instance.
func NewMockModelInterface(ctrl *gomock.Controller) *MockModelInterface {
	mock := &MockModelInterface{ctrl: ctrl}
	mock.recorder = &MockModelInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockModelInterface) EXPECT() *MockModelInterfaceMockRecorder {
	return m.recorder
}

// FuncForTest mocks base method.
func (m *MockModelInterface) FuncForTest(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FuncForTest", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// FuncForTest indicates an expected call of FuncForTest.
func (mr *MockModelInterfaceMockRecorder) FuncForTest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FuncForTest", reflect.TypeOf((*MockModelInterface)(nil).FuncForTest), arg0)
}
